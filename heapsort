
public class heap_sort 

 {


	static void heapify(int arr[], int N, int i)
	{
		int largest = i; 
		int l = 2 * i + 1;
		int r = 2 * i + 2;

		
		if (l < N && arr[l] > arr[largest])
			largest = l;


		if (r < N && arr[r] > arr[largest])
			largest = r;

		
		if (largest != i) {
			int swap = arr[i];
			arr[i] = arr[largest];
			arr[largest] = swap;

			
			heapify(arr, N, largest);
		}
	}


	static void buildHeap(int arr[], int N)
	{
		
		int startIdx = (N / 2) - 1;

		
		for (int i = startIdx; i >= 0; i--) {
			heapify(arr, N, i);
		}
	}


	static void print(int arr[], int N)
	{
		System.out.println(
			"Array representation of Heap is:");

		for (int i = 0; i < N; ++i)
			System.out.print(arr[i] + " ");

		System.out.println();
	}
	static void sort(int arr[], int N) {
		
		int sorted[] = new int[N];
		for (int i = N-1; i>=0;i--) {
			sorted[i] = arr[0];
			arr[0] = arr[i];
			buildHeap(arr, i);
		}
		print(sorted, N);
	}
	public static void main(String args[])
	{
		
		int arr[] = {5, 22, 9, 76, 63, 81, 48, 92, 54, 28};
		int N = arr.length;
	
		buildHeap(arr, N);
		print(arr, N);
		sort(arr, N);
	}
}
